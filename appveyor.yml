environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_compiler.cmd"

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "32"
      platform: x86
      msvs_toolset: 14

#    - PYTHON: "C:\\Python33"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "32"

#    - PYTHON: "C:\\Python34"
#      PYTHON_VERSION: "3.4.1"
#      PYTHON_ARCH: "32"

#    - PYTHON: "C:\\Python27-x64"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "64"
#      WINDOWS_SDK_VERSION: "v7.0"

#    - PYTHON: "C:\\Python33-x64"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "64"
#      WINDOWS_SDK_VERSION: "v7.1"

#    - PYTHON: "C:\\Python34-x64"
#      PYTHON_VERSION: "3.4.1"
#      PYTHON_ARCH: "64"
#      WINDOWS_SDK_VERSION: "v7.1"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - SET SDK_VERSION=v3.0.0-rc1-277-ge04b061
  - ps: Write-Output "fetching mapnik sdk https://mapnik.s3.amazonaws.com/dist/dev/mapnik-win-sdk-$env:msvs_toolset.0-$env:Platform-$env:SDK_VERSION.7z"
  - ps: Start-FileDownload https://mapnik.s3.amazonaws.com/dist/dev/mapnik-win-sdk-$env:msvs_toolset.0-$env:Platform-$env:SDK_VERSION.7z -FileName mapnik-sdk.7z
  - ps: Write-Output "extracting mapnik sdk"
  - ps: invoke-expression "& 7z -y x mapnik-sdk.7z | FIND /V `"ing  `""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r requirements-dev.txt"

build: false

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% py.test"

after_test:
  # If tests are successful, create a whl package for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
  - ps: "ls dist"

artifacts:
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
